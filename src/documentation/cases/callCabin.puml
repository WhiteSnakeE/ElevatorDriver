@startuml

actor Passenger

Passenger ->  FloorButton: pressDownButton()
activate FloorButton
FloorButton --> Controller
deactivate FloorButton
Controller -> Controller: runCommands()

activate Controller

Controller -> Controller: executeCommand("findNearestCabin", params)

Controller -> Shafts: activate
deactivate Controller
activate Shafts
loop "for each stop from sequanceOfStops"
Shafts -> Controller: executeCommand("moveCabin", params)
Shafts <-- Controller
Shafts -> Controller: executeCommand("stopCabin", params)
Shafts <-- Controller

Shafts -> Controller: executeCommand("openDoor", params)
Shafts <-- Controller

Shafts -> Controller: executeCommand("closeDoor", params)
Shafts <-- Controller

end
Shafts -> Shafts:clearSequence

Shafts --> Controller
deactivate Shafts

@enduml
